<!--
Uncomment this for XHTML entities
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
-->
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
             xmlns:g="urn:import:com.google.gwt.user.client.ui"
             xmlns:s="urn:import:com.newton449.virtualserverclient.home.client">
    <ui:style>
        .container{
        margin: 5px;
        }
        .title{
        font-size: 120%;
        margin: 10px 5px;
        }
        .description{
        margin: 10px 5px;
        }
        .modulesListPanel{
        }
        .table{
        }
    </ui:style>
    <g:HTMLPanel addStyleNames="{style.container}">
        <div class="{style.title}">Virtual Server</div>
        <div class="{style.description}">
            Virtual Server is a clonable, highly extentable, cross-platform
            system. It is made of a main program and multiple modules. Each
            module has a dynamic library file with some configuration files.
            Modules are dynamicly loaded by the main program. In other words,
            the main program does not know the specific functions provided by
            modules. It loads configurations of modules and allows them to 
            register their functions. As a result, we can create a module
            without recompile the main program, and can add or remove modules
            at runtime.
            <p/>
            The server is implemented in C++. However, it provdes HTTP server
            functions so that it can be accessed by browsers. Each module can
            provide their own HTML pages and register them to URLs. Those pages 
            are implemented by Google Web Toolkit, which can convert Java codes
            into JavaScript codes to implement AJAX.
        </div>
        <div class="{style.title}">Platform Information</div>
        <div class="{style.description}">
            <span ui:field="platformInfo"></span>
        </div>
        <div class="{style.title}">Modules State</div>
        <div class="{style.modulesListPanel}">
            <s:ModulesStateTable ui:field="table" addStyleNames="{style.table}"/>
        </div>
    </g:HTMLPanel>
</ui:UiBinder>