// This is a generated source file for Chilkat version 9.5.0.21
#ifndef _C_CkHttpWH
#define _C_CkHttpWH
#include "chilkatDefs.h"

#include "Chilkat_C.h"

HCkHttpW CkHttpW_Create(void);
HCkHttpW CkHttpW_Create2(BOOL bCallbackOwned);
void CkHttpW_Dispose(HCkHttpW handle);
void CkHttpW_getAccept(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAccept(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_ck_accept(HCkHttpW cHandle);
void CkHttpW_getAcceptCharset(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAcceptCharset(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_acceptCharset(HCkHttpW cHandle);
void CkHttpW_getAcceptLanguage(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAcceptLanguage(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_acceptLanguage(HCkHttpW cHandle);
BOOL CkHttpW_getAllowGzip(HCkHttpW cHandle);
void CkHttpW_putAllowGzip(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getAutoAddHostHeader(HCkHttpW cHandle);
void CkHttpW_putAutoAddHostHeader(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getAwsAccessKey(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAwsAccessKey(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_awsAccessKey(HCkHttpW cHandle);
void CkHttpW_getAwsEndpoint(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAwsEndpoint(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_awsEndpoint(HCkHttpW cHandle);
void CkHttpW_getAwsSecretKey(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAwsSecretKey(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_awsSecretKey(HCkHttpW cHandle);
void CkHttpW_getAwsSubResources(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putAwsSubResources(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_awsSubResources(HCkHttpW cHandle);
BOOL CkHttpW_getBasicAuth(HCkHttpW cHandle);
void CkHttpW_putBasicAuth(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getBgLastErrorText(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_bgLastErrorText(HCkHttpW cHandle);
int CkHttpW_getBgPercentDone(HCkHttpW cHandle);
void CkHttpW_getBgResultData(HCkHttpW cHandle, HCkByteData retval);
int CkHttpW_getBgResultInt(HCkHttpW cHandle);
void CkHttpW_getBgResultString(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_bgResultString(HCkHttpW cHandle);
BOOL CkHttpW_getBgTaskFinished(HCkHttpW cHandle);
BOOL CkHttpW_getBgTaskRunning(HCkHttpW cHandle);
BOOL CkHttpW_getBgTaskSuccess(HCkHttpW cHandle);
void CkHttpW_getClientIpAddress(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putClientIpAddress(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_clientIpAddress(HCkHttpW cHandle);
int CkHttpW_getConnectTimeout(HCkHttpW cHandle);
void CkHttpW_putConnectTimeout(HCkHttpW cHandle, int newVal);
void CkHttpW_getConnection(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putConnection(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_connection(HCkHttpW cHandle);
void CkHttpW_getCookieDir(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putCookieDir(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_cookieDir(HCkHttpW cHandle);
void CkHttpW_getDebugLogFilePath(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putDebugLogFilePath(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_debugLogFilePath(HCkHttpW cHandle);
int CkHttpW_getDefaultFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putDefaultFreshPeriod(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getDigestAuth(HCkHttpW cHandle);
void CkHttpW_putDigestAuth(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getEventLogCount(HCkHttpW cHandle);
BOOL CkHttpW_getFetchFromCache(HCkHttpW cHandle);
void CkHttpW_putFetchFromCache(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getFinalRedirectUrl(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_finalRedirectUrl(HCkHttpW cHandle);
BOOL CkHttpW_getFollowRedirects(HCkHttpW cHandle);
void CkHttpW_putFollowRedirects(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getFreshnessAlgorithm(HCkHttpW cHandle);
void CkHttpW_putFreshnessAlgorithm(HCkHttpW cHandle, int newVal);
int CkHttpW_getHeartbeatMs(HCkHttpW cHandle);
void CkHttpW_putHeartbeatMs(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getIgnoreMustRevalidate(HCkHttpW cHandle);
void CkHttpW_putIgnoreMustRevalidate(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getIgnoreNoCache(HCkHttpW cHandle);
void CkHttpW_putIgnoreNoCache(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getKeepEventLog(HCkHttpW cHandle);
void CkHttpW_putKeepEventLog(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getLMFactor(HCkHttpW cHandle);
void CkHttpW_putLMFactor(HCkHttpW cHandle, int newVal);
void CkHttpW_getLastContentType(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastContentType(HCkHttpW cHandle);
void CkHttpW_getLastErrorHtml(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastErrorHtml(HCkHttpW cHandle);
void CkHttpW_getLastErrorText(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastErrorText(HCkHttpW cHandle);
void CkHttpW_getLastErrorXml(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastErrorXml(HCkHttpW cHandle);
void CkHttpW_getLastHeader(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastHeader(HCkHttpW cHandle);
void CkHttpW_getLastModDate(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastModDate(HCkHttpW cHandle);
void CkHttpW_getLastResponseHeader(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_lastResponseHeader(HCkHttpW cHandle);
int CkHttpW_getLastStatus(HCkHttpW cHandle);
void CkHttpW_getLogin(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putLogin(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_login(HCkHttpW cHandle);
void CkHttpW_getLoginDomain(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putLoginDomain(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_loginDomain(HCkHttpW cHandle);
int CkHttpW_getMaxConnections(HCkHttpW cHandle);
void CkHttpW_putMaxConnections(HCkHttpW cHandle, int newVal);
int CkHttpW_getMaxFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putMaxFreshPeriod(HCkHttpW cHandle, int newVal);
unsigned long CkHttpW_getMaxResponseSize(HCkHttpW cHandle);
void CkHttpW_putMaxResponseSize(HCkHttpW cHandle, unsigned long newVal);
int CkHttpW_getMaxUrlLen(HCkHttpW cHandle);
void CkHttpW_putMaxUrlLen(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getMimicFireFox(HCkHttpW cHandle);
void CkHttpW_putMimicFireFox(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getMimicIE(HCkHttpW cHandle);
void CkHttpW_putMimicIE(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getMinFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putMinFreshPeriod(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getNegotiateAuth(HCkHttpW cHandle);
void CkHttpW_putNegotiateAuth(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getNtlmAuth(HCkHttpW cHandle);
void CkHttpW_putNtlmAuth(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getNumCacheLevels(HCkHttpW cHandle);
void CkHttpW_putNumCacheLevels(HCkHttpW cHandle, int newVal);
int CkHttpW_getNumCacheRoots(HCkHttpW cHandle);
BOOL CkHttpW_getOAuth1(HCkHttpW cHandle);
void CkHttpW_putOAuth1(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getOAuthConsumerKey(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthConsumerKey(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthConsumerKey(HCkHttpW cHandle);
void CkHttpW_getOAuthConsumerSecret(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthConsumerSecret(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthConsumerSecret(HCkHttpW cHandle);
void CkHttpW_getOAuthRealm(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthRealm(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthRealm(HCkHttpW cHandle);
void CkHttpW_getOAuthSigMethod(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthSigMethod(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthSigMethod(HCkHttpW cHandle);
void CkHttpW_getOAuthToken(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthToken(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthToken(HCkHttpW cHandle);
void CkHttpW_getOAuthTokenSecret(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthTokenSecret(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthTokenSecret(HCkHttpW cHandle);
void CkHttpW_getOAuthVerifier(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putOAuthVerifier(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_oAuthVerifier(HCkHttpW cHandle);
void CkHttpW_getPassword(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putPassword(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_password(HCkHttpW cHandle);
void CkHttpW_getProxyAuthMethod(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putProxyAuthMethod(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_proxyAuthMethod(HCkHttpW cHandle);
void CkHttpW_getProxyDomain(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putProxyDomain(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_proxyDomain(HCkHttpW cHandle);
void CkHttpW_getProxyLogin(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putProxyLogin(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_proxyLogin(HCkHttpW cHandle);
void CkHttpW_getProxyLoginDomain(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putProxyLoginDomain(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_proxyLoginDomain(HCkHttpW cHandle);
void CkHttpW_getProxyPassword(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putProxyPassword(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_proxyPassword(HCkHttpW cHandle);
int CkHttpW_getProxyPort(HCkHttpW cHandle);
void CkHttpW_putProxyPort(HCkHttpW cHandle, int newVal);
int CkHttpW_getReadTimeout(HCkHttpW cHandle);
void CkHttpW_putReadTimeout(HCkHttpW cHandle, int newVal);
void CkHttpW_getRedirectVerb(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putRedirectVerb(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_redirectVerb(HCkHttpW cHandle);
void CkHttpW_getReferer(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putReferer(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_referer(HCkHttpW cHandle);
void CkHttpW_getRequiredContentType(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putRequiredContentType(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_requiredContentType(HCkHttpW cHandle);
BOOL CkHttpW_getS3Ssl(HCkHttpW cHandle);
void CkHttpW_putS3Ssl(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getSaveCookies(HCkHttpW cHandle);
void CkHttpW_putSaveCookies(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getSendBufferSize(HCkHttpW cHandle);
void CkHttpW_putSendBufferSize(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getSendCookies(HCkHttpW cHandle);
void CkHttpW_putSendCookies(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getSessionLogFilename(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putSessionLogFilename(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_sessionLogFilename(HCkHttpW cHandle);
int CkHttpW_getSoRcvBuf(HCkHttpW cHandle);
void CkHttpW_putSoRcvBuf(HCkHttpW cHandle, int newVal);
int CkHttpW_getSoSndBuf(HCkHttpW cHandle);
void CkHttpW_putSoSndBuf(HCkHttpW cHandle, int newVal);
void CkHttpW_getSocksHostname(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putSocksHostname(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_socksHostname(HCkHttpW cHandle);
void CkHttpW_getSocksPassword(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putSocksPassword(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_socksPassword(HCkHttpW cHandle);
int CkHttpW_getSocksPort(HCkHttpW cHandle);
void CkHttpW_putSocksPort(HCkHttpW cHandle, int newVal);
void CkHttpW_getSocksUsername(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putSocksUsername(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_socksUsername(HCkHttpW cHandle);
int CkHttpW_getSocksVersion(HCkHttpW cHandle);
void CkHttpW_putSocksVersion(HCkHttpW cHandle, int newVal);
void CkHttpW_getSslProtocol(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putSslProtocol(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_sslProtocol(HCkHttpW cHandle);
BOOL CkHttpW_getUpdateCache(HCkHttpW cHandle);
void CkHttpW_putUpdateCache(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getUseBgThread(HCkHttpW cHandle);
void CkHttpW_putUseBgThread(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getUseIEProxy(HCkHttpW cHandle);
void CkHttpW_putUseIEProxy(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getUserAgent(HCkHttpW cHandle, HCkString retval);
void CkHttpW_putUserAgent(HCkHttpW cHandle, const wchar_t *newVal);
const wchar_t *CkHttpW_userAgent(HCkHttpW cHandle);
BOOL CkHttpW_getVerboseLogging(HCkHttpW cHandle);
void CkHttpW_putVerboseLogging(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getVersion(HCkHttpW cHandle, HCkString retval);
const wchar_t *CkHttpW_version(HCkHttpW cHandle);
BOOL CkHttpW_getWasRedirected(HCkHttpW cHandle);
void CkHttpW_AddCacheRoot(HCkHttpW cHandle, const wchar_t *dir);
BOOL CkHttpW_AddQuickHeader(HCkHttpW cHandle, const wchar_t *headerFieldName, const wchar_t *headerFieldValue);
HCkHttpResponseW CkHttpW_BgResponseObject(HCkHttpW cHandle);
void CkHttpW_BgTaskAbort(HCkHttpW cHandle);
void CkHttpW_ClearBgEventLog(HCkHttpW cHandle);
void CkHttpW_ClearInMemoryCookies(HCkHttpW cHandle);
BOOL CkHttpW_CloseAllConnections(HCkHttpW cHandle);
BOOL CkHttpW_Download(HCkHttpW cHandle, const wchar_t *url, const wchar_t *localFilePath);
BOOL CkHttpW_DownloadAppend(HCkHttpW cHandle, const wchar_t *url, const wchar_t *filename);
BOOL CkHttpW_DownloadHash(HCkHttpW cHandle, const wchar_t *url, const wchar_t *hashAlgorithm, const wchar_t *encoding, HCkString outStr);
const wchar_t *CkHttpW_downloadHash(HCkHttpW cHandle, const wchar_t *url, const wchar_t *hashAlgorithm, const wchar_t *encoding);
BOOL CkHttpW_EventLogName(HCkHttpW cHandle, int index, HCkString outStr);
const wchar_t *CkHttpW_eventLogName(HCkHttpW cHandle, int index);
BOOL CkHttpW_EventLogValue(HCkHttpW cHandle, int index, HCkString outStr);
const wchar_t *CkHttpW_eventLogValue(HCkHttpW cHandle, int index);
BOOL CkHttpW_ExtractMetaRefreshUrl(HCkHttpW cHandle, const wchar_t *htmlContent, HCkString outStr);
const wchar_t *CkHttpW_extractMetaRefreshUrl(HCkHttpW cHandle, const wchar_t *htmlContent);
BOOL CkHttpW_GenTimeStamp(HCkHttpW cHandle, HCkString outStr);
const wchar_t *CkHttpW_genTimeStamp(HCkHttpW cHandle);
BOOL CkHttpW_GetCacheRoot(HCkHttpW cHandle, int index, HCkString outStr);
const wchar_t *CkHttpW_getCacheRoot(HCkHttpW cHandle, int index);
BOOL CkHttpW_GetCookieXml(HCkHttpW cHandle, const wchar_t *domain, HCkString outStr);
const wchar_t *CkHttpW_getCookieXml(HCkHttpW cHandle, const wchar_t *domain);
BOOL CkHttpW_GetDomain(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_getDomain(HCkHttpW cHandle, const wchar_t *url);
HCkHttpResponseW CkHttpW_GetHead(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_GetRequestHeader(HCkHttpW cHandle, const wchar_t *name, HCkString outStr);
const wchar_t *CkHttpW_getRequestHeader(HCkHttpW cHandle, const wchar_t *name);
HCkCertW CkHttpW_GetServerSslCert(HCkHttpW cHandle, const wchar_t *domain, int port);
BOOL CkHttpW_GetUrlPath(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_getUrlPath(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_HasRequestHeader(HCkHttpW cHandle, const wchar_t *name);
BOOL CkHttpW_IsUnlocked(HCkHttpW cHandle);
BOOL CkHttpW_PostBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteData byteData, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkString outStr);
const wchar_t *CkHttpW_postBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteData byteData, const wchar_t *contentType, BOOL md5, BOOL gzip);
HCkHttpResponseW CkHttpW_PostJson(HCkHttpW cHandle, const wchar_t *url, const wchar_t *jsonText);
HCkHttpResponseW CkHttpW_PostJson2(HCkHttpW cHandle, const wchar_t *url, const wchar_t *contentType, const wchar_t *jsonText);
HCkHttpResponseW CkHttpW_PostMime(HCkHttpW cHandle, const wchar_t *url, const wchar_t *mime);
HCkHttpResponseW CkHttpW_PostUrlEncoded(HCkHttpW cHandle, const wchar_t *url, HCkHttpRequestW req);
HCkHttpResponseW CkHttpW_PostXml(HCkHttpW cHandle, const wchar_t *endpointUrl, const wchar_t *xmlContent, const wchar_t *xmlCharset);
BOOL CkHttpW_PutBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteData byteData, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkString outStr);
const wchar_t *CkHttpW_putBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteData byteData, const wchar_t *contentType, BOOL md5, BOOL gzip);
BOOL CkHttpW_PutText(HCkHttpW cHandle, const wchar_t *url, const wchar_t *textData, const wchar_t *charset, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkString outStr);
const wchar_t *CkHttpW_putText(HCkHttpW cHandle, const wchar_t *url, const wchar_t *textData, const wchar_t *charset, const wchar_t *contentType, BOOL md5, BOOL gzip);
BOOL CkHttpW_QuickDeleteStr(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_quickDeleteStr(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_QuickGet(HCkHttpW cHandle, const wchar_t *url, HCkByteData outData);
HCkHttpResponseW CkHttpW_QuickGetObj(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_QuickGetStr(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_quickGetStr(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_QuickPutStr(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_quickPutStr(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_RemoveQuickHeader(HCkHttpW cHandle, const wchar_t *headerFieldName);
void CkHttpW_RemoveRequestHeader(HCkHttpW cHandle, const wchar_t *name);
BOOL CkHttpW_RenderGet(HCkHttpW cHandle, const wchar_t *url, HCkString outStr);
const wchar_t *CkHttpW_renderGet(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_ResumeDownload(HCkHttpW cHandle, const wchar_t *url, const wchar_t *targetFilename);
BOOL CkHttpW_S3_CreateBucket(HCkHttpW cHandle, const wchar_t *bucketPath);
BOOL CkHttpW_S3_DeleteBucket(HCkHttpW cHandle, const wchar_t *bucketPath);
BOOL CkHttpW_S3_DeleteObject(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName);
BOOL CkHttpW_S3_DownloadBytes(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName, HCkByteData outBytes);
BOOL CkHttpW_S3_DownloadFile(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName, const wchar_t *localFilePath);
BOOL CkHttpW_S3_DownloadString(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName, const wchar_t *charset, HCkString outStr);
const wchar_t *CkHttpW_s3_DownloadString(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName, const wchar_t *charset);
int CkHttpW_S3_FileExists(HCkHttpW cHandle, const wchar_t *bucketPath, const wchar_t *objectName);
BOOL CkHttpW_S3_ListBucketObjects(HCkHttpW cHandle, const wchar_t *bucketPath, HCkString outStr);
const wchar_t *CkHttpW_s3_ListBucketObjects(HCkHttpW cHandle, const wchar_t *bucketPath);
BOOL CkHttpW_S3_ListBuckets(HCkHttpW cHandle, HCkString outStr);
const wchar_t *CkHttpW_s3_ListBuckets(HCkHttpW cHandle);
BOOL CkHttpW_S3_UploadBytes(HCkHttpW cHandle, HCkByteData contentBytes, const wchar_t *contentType, const wchar_t *bucketPath, const wchar_t *objectName);
BOOL CkHttpW_S3_UploadFile(HCkHttpW cHandle, const wchar_t *localFilePath, const wchar_t *contentType, const wchar_t *bucketPath, const wchar_t *objectName);
BOOL CkHttpW_S3_UploadString(HCkHttpW cHandle, const wchar_t *objectContent, const wchar_t *charset, const wchar_t *contentType, const wchar_t *bucketPath, const wchar_t *objectName);
BOOL CkHttpW_SaveLastError(HCkHttpW cHandle, const wchar_t *path);
BOOL CkHttpW_SetCookieXml(HCkHttpW cHandle, const wchar_t *domain, const wchar_t *cookieXml);
void CkHttpW_SetRequestHeader(HCkHttpW cHandle, const wchar_t *headerFieldName, const wchar_t *headerFieldValue);
BOOL CkHttpW_SetSslClientCert(HCkHttpW cHandle, HCkCertW cert);
BOOL CkHttpW_SetSslClientCertPem(HCkHttpW cHandle, const wchar_t *pemDataOrPath, const wchar_t *pemPassword);
BOOL CkHttpW_SetSslClientCertPfx(HCkHttpW cHandle, const wchar_t *pfxPath, const wchar_t *pfxPassword);
void CkHttpW_SleepMs(HCkHttpW cHandle, int millisec);
HCkHttpResponseW CkHttpW_SynchronousRequest(HCkHttpW cHandle, const wchar_t *domain, int port, BOOL ssl, HCkHttpRequestW req);
BOOL CkHttpW_UnlockComponent(HCkHttpW cHandle, const wchar_t *unlockCode);
BOOL CkHttpW_UrlDecode(HCkHttpW cHandle, const wchar_t *str, HCkString outStr);
const wchar_t *CkHttpW_urlDecode(HCkHttpW cHandle, const wchar_t *str);
BOOL CkHttpW_UrlEncode(HCkHttpW cHandle, const wchar_t *str, HCkString outStr);
const wchar_t *CkHttpW_urlEncode(HCkHttpW cHandle, const wchar_t *str);
BOOL CkHttpW_XmlRpc(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn, HCkString outStr);
const wchar_t *CkHttpW_xmlRpc(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn);
BOOL CkHttpW_XmlRpcPut(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn, HCkString outStr);
const wchar_t *CkHttpW_xmlRpcPut(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn);
#endif
