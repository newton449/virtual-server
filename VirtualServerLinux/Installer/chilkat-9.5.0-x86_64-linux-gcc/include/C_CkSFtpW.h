// This is a generated source file for Chilkat version 9.5.0.21
#ifndef _C_CkSFtpWH
#define _C_CkSFtpWH
#include "chilkatDefs.h"

#include "Chilkat_C.h"

HCkSFtpW CkSFtpW_Create(void);
HCkSFtpW CkSFtpW_Create2(BOOL bCallbackOwned);
void CkSFtpW_Dispose(HCkSFtpW handle);
void CkSFtpW_getAccumulateBuffer(HCkSFtpW cHandle, HCkByteData retval);
void CkSFtpW_getClientIdentifier(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putClientIdentifier(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_clientIdentifier(HCkSFtpW cHandle);
void CkSFtpW_getClientIpAddress(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putClientIpAddress(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_clientIpAddress(HCkSFtpW cHandle);
int CkSFtpW_getConnectTimeoutMs(HCkSFtpW cHandle);
void CkSFtpW_putConnectTimeoutMs(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getDebugLogFilePath(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putDebugLogFilePath(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_debugLogFilePath(HCkSFtpW cHandle);
int CkSFtpW_getDisconnectCode(HCkSFtpW cHandle);
void CkSFtpW_getDisconnectReason(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_disconnectReason(HCkSFtpW cHandle);
BOOL CkSFtpW_getEnableCache(HCkSFtpW cHandle);
void CkSFtpW_putEnableCache(HCkSFtpW cHandle, BOOL newVal);
void CkSFtpW_getFilenameCharset(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putFilenameCharset(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_filenameCharset(HCkSFtpW cHandle);
void CkSFtpW_getForceCipher(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putForceCipher(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_forceCipher(HCkSFtpW cHandle);
BOOL CkSFtpW_getForceV3(HCkSFtpW cHandle);
void CkSFtpW_putForceV3(HCkSFtpW cHandle, BOOL newVal);
int CkSFtpW_getHeartbeatMs(HCkSFtpW cHandle);
void CkSFtpW_putHeartbeatMs(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getHostKeyAlg(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHostKeyAlg(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_hostKeyAlg(HCkSFtpW cHandle);
void CkSFtpW_getHostKeyFingerprint(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_hostKeyFingerprint(HCkSFtpW cHandle);
void CkSFtpW_getHttpProxyAuthMethod(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHttpProxyAuthMethod(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_httpProxyAuthMethod(HCkSFtpW cHandle);
void CkSFtpW_getHttpProxyDomain(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHttpProxyDomain(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_httpProxyDomain(HCkSFtpW cHandle);
void CkSFtpW_getHttpProxyHostname(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHttpProxyHostname(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_httpProxyHostname(HCkSFtpW cHandle);
void CkSFtpW_getHttpProxyPassword(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHttpProxyPassword(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_httpProxyPassword(HCkSFtpW cHandle);
int CkSFtpW_getHttpProxyPort(HCkSFtpW cHandle);
void CkSFtpW_putHttpProxyPort(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getHttpProxyUsername(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putHttpProxyUsername(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_httpProxyUsername(HCkSFtpW cHandle);
int CkSFtpW_getIdleTimeoutMs(HCkSFtpW cHandle);
void CkSFtpW_putIdleTimeoutMs(HCkSFtpW cHandle, int newVal);
BOOL CkSFtpW_getIncludeDotDirs(HCkSFtpW cHandle);
void CkSFtpW_putIncludeDotDirs(HCkSFtpW cHandle, BOOL newVal);
int CkSFtpW_getInitializeFailCode(HCkSFtpW cHandle);
void CkSFtpW_getInitializeFailReason(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_initializeFailReason(HCkSFtpW cHandle);
BOOL CkSFtpW_getIsConnected(HCkSFtpW cHandle);
BOOL CkSFtpW_getKeepSessionLog(HCkSFtpW cHandle);
void CkSFtpW_putKeepSessionLog(HCkSFtpW cHandle, BOOL newVal);
void CkSFtpW_getLastErrorHtml(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_lastErrorHtml(HCkSFtpW cHandle);
void CkSFtpW_getLastErrorText(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_lastErrorText(HCkSFtpW cHandle);
void CkSFtpW_getLastErrorXml(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_lastErrorXml(HCkSFtpW cHandle);
int CkSFtpW_getMaxPacketSize(HCkSFtpW cHandle);
void CkSFtpW_putMaxPacketSize(HCkSFtpW cHandle, int newVal);
BOOL CkSFtpW_getPasswordChangeRequested(HCkSFtpW cHandle);
BOOL CkSFtpW_getPreserveDate(HCkSFtpW cHandle);
void CkSFtpW_putPreserveDate(HCkSFtpW cHandle, BOOL newVal);
int CkSFtpW_getProtocolVersion(HCkSFtpW cHandle);
void CkSFtpW_getSessionLog(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_sessionLog(HCkSFtpW cHandle);
int CkSFtpW_getSoRcvBuf(HCkSFtpW cHandle);
void CkSFtpW_putSoRcvBuf(HCkSFtpW cHandle, int newVal);
int CkSFtpW_getSoSndBuf(HCkSFtpW cHandle);
void CkSFtpW_putSoSndBuf(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getSocksHostname(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putSocksHostname(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_socksHostname(HCkSFtpW cHandle);
void CkSFtpW_getSocksPassword(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putSocksPassword(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_socksPassword(HCkSFtpW cHandle);
int CkSFtpW_getSocksPort(HCkSFtpW cHandle);
void CkSFtpW_putSocksPort(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getSocksUsername(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putSocksUsername(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_socksUsername(HCkSFtpW cHandle);
int CkSFtpW_getSocksVersion(HCkSFtpW cHandle);
void CkSFtpW_putSocksVersion(HCkSFtpW cHandle, int newVal);
void CkSFtpW_getSyncMustMatch(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putSyncMustMatch(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_syncMustMatch(HCkSFtpW cHandle);
void CkSFtpW_getSyncMustNotMatch(HCkSFtpW cHandle, HCkString retval);
void CkSFtpW_putSyncMustNotMatch(HCkSFtpW cHandle, const wchar_t *newVal);
const wchar_t *CkSFtpW_syncMustNotMatch(HCkSFtpW cHandle);
BOOL CkSFtpW_getTcpNoDelay(HCkSFtpW cHandle);
void CkSFtpW_putTcpNoDelay(HCkSFtpW cHandle, BOOL newVal);
int CkSFtpW_getUploadChunkSize(HCkSFtpW cHandle);
void CkSFtpW_putUploadChunkSize(HCkSFtpW cHandle, int newVal);
BOOL CkSFtpW_getUtcMode(HCkSFtpW cHandle);
void CkSFtpW_putUtcMode(HCkSFtpW cHandle, BOOL newVal);
BOOL CkSFtpW_getVerboseLogging(HCkSFtpW cHandle);
void CkSFtpW_putVerboseLogging(HCkSFtpW cHandle, BOOL newVal);
void CkSFtpW_getVersion(HCkSFtpW cHandle, HCkString retval);
const wchar_t *CkSFtpW_version(HCkSFtpW cHandle);
int CkSFtpW_AccumulateBytes(HCkSFtpW cHandle, const wchar_t *handle, int maxBytes);
BOOL CkSFtpW_Add64(HCkSFtpW cHandle, const wchar_t *n1, const wchar_t *n2, HCkString outStr);
const wchar_t *CkSFtpW_add64(HCkSFtpW cHandle, const wchar_t *n1, const wchar_t *n2);
BOOL CkSFtpW_AuthenticatePk(HCkSFtpW cHandle, const wchar_t *username, HCkSshKeyW privateKey);
BOOL CkSFtpW_AuthenticatePw(HCkSFtpW cHandle, const wchar_t *login, const wchar_t *password);
BOOL CkSFtpW_AuthenticatePwPk(HCkSFtpW cHandle, const wchar_t *username, const wchar_t *password, HCkSshKeyW privateKey);
void CkSFtpW_ClearAccumulateBuffer(HCkSFtpW cHandle);
void CkSFtpW_ClearCache(HCkSFtpW cHandle);
void CkSFtpW_ClearSessionLog(HCkSFtpW cHandle);
BOOL CkSFtpW_CloseHandle(HCkSFtpW cHandle, const wchar_t *handle);
BOOL CkSFtpW_Connect(HCkSFtpW cHandle, const wchar_t *domainName, int port);
BOOL CkSFtpW_CopyFileAttr(HCkSFtpW cHandle, const wchar_t *localFilename, const wchar_t *remoteFilename, BOOL isHandle);
BOOL CkSFtpW_CreateDir(HCkSFtpW cHandle, const wchar_t *path);
void CkSFtpW_Disconnect(HCkSFtpW cHandle);
BOOL CkSFtpW_DownloadFile(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *toFilename);
BOOL CkSFtpW_DownloadFileByName(HCkSFtpW cHandle, const wchar_t *remoteFilePath, const wchar_t *localFilePath);
BOOL CkSFtpW_Eof(HCkSFtpW cHandle, const wchar_t *handle);
HCkDateTimeW CkSFtpW_GetFileCreateDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileCreateTime(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, SYSTEMTIME *outSysTime);
BOOL CkSFtpW_GetFileCreateTimeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileCreateTimeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileGroup(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileGroup(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileLastAccess(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, SYSTEMTIME *outSysTime);
HCkDateTimeW CkSFtpW_GetFileLastAccessDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileLastAccessStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileLastAccessStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileLastModified(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, SYSTEMTIME *outSysTime);
HCkDateTimeW CkSFtpW_GetFileLastModifiedDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileLastModifiedStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileLastModifiedStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileOwner(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileOwner(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
int CkSFtpW_GetFilePermissions(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
int CkSFtpW_GetFileSize32(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
__int64 CkSFtpW_GetFileSize64(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_GetFileSizeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle, HCkString outStr);
const wchar_t *CkSFtpW_getFileSizeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bFollowLinks, BOOL bIsHandle);
BOOL CkSFtpW_InitializeSftp(HCkSFtpW cHandle);
BOOL CkSFtpW_LastReadFailed(HCkSFtpW cHandle, const wchar_t *handle);
int CkSFtpW_LastReadNumBytes(HCkSFtpW cHandle, const wchar_t *handle);
BOOL CkSFtpW_OpenDir(HCkSFtpW cHandle, const wchar_t *path, HCkString outStr);
const wchar_t *CkSFtpW_openDir(HCkSFtpW cHandle, const wchar_t *path);
BOOL CkSFtpW_OpenFile(HCkSFtpW cHandle, const wchar_t *remotePath, const wchar_t *access, const wchar_t *createDisposition, HCkString outStr);
const wchar_t *CkSFtpW_openFile(HCkSFtpW cHandle, const wchar_t *remotePath, const wchar_t *access, const wchar_t *createDisposition);
HCkSFtpDirW CkSFtpW_ReadDir(HCkSFtpW cHandle, const wchar_t *handle);
BOOL CkSFtpW_ReadFileBytes(HCkSFtpW cHandle, const wchar_t *handle, int numBytes, HCkByteData outBytes);
BOOL CkSFtpW_ReadFileBytes32(HCkSFtpW cHandle, const wchar_t *handle, int offset, int numBytes, HCkByteData outBytes);
BOOL CkSFtpW_ReadFileBytes64(HCkSFtpW cHandle, const wchar_t *handle, __int64 offset, int numBytes, HCkByteData outBytes);
BOOL CkSFtpW_ReadFileBytes64s(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *offset, int numBytes, HCkByteData outBytes);
BOOL CkSFtpW_ReadFileText(HCkSFtpW cHandle, const wchar_t *handle, int numBytes, const wchar_t *charset, HCkString outStr);
const wchar_t *CkSFtpW_readFileText(HCkSFtpW cHandle, const wchar_t *handle, int numBytes, const wchar_t *charset);
BOOL CkSFtpW_ReadFileText32(HCkSFtpW cHandle, const wchar_t *handle, int offset, int numBytes, const wchar_t *charset, HCkString outStr);
const wchar_t *CkSFtpW_readFileText32(HCkSFtpW cHandle, const wchar_t *handle, int offset, int numBytes, const wchar_t *charset);
BOOL CkSFtpW_ReadFileText64(HCkSFtpW cHandle, const wchar_t *handle, __int64 offset, int numBytes, const wchar_t *charset, HCkString outStr);
const wchar_t *CkSFtpW_readFileText64(HCkSFtpW cHandle, const wchar_t *handle, __int64 offset, int numBytes, const wchar_t *charset);
BOOL CkSFtpW_ReadFileText64s(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *offset, int numBytes, const wchar_t *charset, HCkString outStr);
const wchar_t *CkSFtpW_readFileText64s(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *offset, int numBytes, const wchar_t *charset);
BOOL CkSFtpW_RealPath(HCkSFtpW cHandle, const wchar_t *originalPath, const wchar_t *composePath, HCkString outStr);
const wchar_t *CkSFtpW_realPath(HCkSFtpW cHandle, const wchar_t *originalPath, const wchar_t *composePath);
BOOL CkSFtpW_RemoveDir(HCkSFtpW cHandle, const wchar_t *path);
BOOL CkSFtpW_RemoveFile(HCkSFtpW cHandle, const wchar_t *filename);
BOOL CkSFtpW_RenameFileOrDir(HCkSFtpW cHandle, const wchar_t *oldPath, const wchar_t *newPath);
BOOL CkSFtpW_ResumeDownloadFileByName(HCkSFtpW cHandle, const wchar_t *remoteFilePath, const wchar_t *localFilePath);
BOOL CkSFtpW_ResumeUploadFileByName(HCkSFtpW cHandle, const wchar_t *remoteFilePath, const wchar_t *localFilePath);
BOOL CkSFtpW_SaveLastError(HCkSFtpW cHandle, const wchar_t *path);
BOOL CkSFtpW_SetCreateDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, HCkDateTimeW createDateTime);
BOOL CkSFtpW_SetCreateTime(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, SYSTEMTIME *createDateTime);
BOOL CkSFtpW_SetCreateTimeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bIsHandle, const wchar_t *dateTimeStr);
BOOL CkSFtpW_SetLastAccessDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, HCkDateTimeW accessDateTime);
BOOL CkSFtpW_SetLastAccessTime(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, SYSTEMTIME *accessDateTime);
BOOL CkSFtpW_SetLastAccessTimeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bIsHandle, const wchar_t *dateTimeStr);
BOOL CkSFtpW_SetLastModifiedDt(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, HCkDateTimeW modifiedDateTime);
BOOL CkSFtpW_SetLastModifiedTime(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, SYSTEMTIME *modifiedDateTime);
BOOL CkSFtpW_SetLastModifiedTimeStr(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL bIsHandle, const wchar_t *dateTimeStr);
BOOL CkSFtpW_SetOwnerAndGroup(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, const wchar_t *owner, const wchar_t *group);
BOOL CkSFtpW_SetPermissions(HCkSFtpW cHandle, const wchar_t *pathOrHandle, BOOL isHandle, int permissions);
BOOL CkSFtpW_SyncTreeDownload(HCkSFtpW cHandle, const wchar_t *remoteRoot, const wchar_t *localRoot, int mode, BOOL recurse);
BOOL CkSFtpW_SyncTreeUpload(HCkSFtpW cHandle, const wchar_t *localBaseDir, const wchar_t *remoteBaseDir, int mode, BOOL bRecurse);
BOOL CkSFtpW_UnlockComponent(HCkSFtpW cHandle, const wchar_t *unlockCode);
BOOL CkSFtpW_UploadFile(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *fromFilename);
BOOL CkSFtpW_UploadFileByName(HCkSFtpW cHandle, const wchar_t *remoteFilePath, const wchar_t *localFilePath);
BOOL CkSFtpW_WriteFileBytes(HCkSFtpW cHandle, const wchar_t *handle, HCkByteData byteData);
BOOL CkSFtpW_WriteFileBytes32(HCkSFtpW cHandle, const wchar_t *handle, int offset, HCkByteData data);
BOOL CkSFtpW_WriteFileBytes64(HCkSFtpW cHandle, const wchar_t *handle, __int64 offset64, HCkByteData data);
BOOL CkSFtpW_WriteFileBytes64s(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *offset64, HCkByteData data);
BOOL CkSFtpW_WriteFileText(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *charset, const wchar_t *textData);
BOOL CkSFtpW_WriteFileText32(HCkSFtpW cHandle, const wchar_t *handle, int offset32, const wchar_t *charset, const wchar_t *textData);
BOOL CkSFtpW_WriteFileText64(HCkSFtpW cHandle, const wchar_t *handle, __int64 offset64, const wchar_t *charset, const wchar_t *textData);
BOOL CkSFtpW_WriteFileText64s(HCkSFtpW cHandle, const wchar_t *handle, const wchar_t *offset64, const wchar_t *charset, const wchar_t *textData);
#endif
