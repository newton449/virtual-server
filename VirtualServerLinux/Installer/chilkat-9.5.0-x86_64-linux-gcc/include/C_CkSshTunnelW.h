// This is a generated source file for Chilkat version 9.5.0.21
#ifndef _C_CkSshTunnelWH
#define _C_CkSshTunnelWH
#include "chilkatDefs.h"

#include "Chilkat_C.h"

HCkSshTunnelW CkSshTunnelW_Create(void);
void CkSshTunnelW_Dispose(HCkSshTunnelW handle);
void CkSshTunnelW_getAcceptThreadSessionLogPath(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putAcceptThreadSessionLogPath(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_acceptThreadSessionLogPath(HCkSshTunnelW cHandle);
void CkSshTunnelW_getConnectLog(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putConnectLog(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_connectLog(HCkSshTunnelW cHandle);
int CkSshTunnelW_getConnectTimeoutMs(HCkSshTunnelW cHandle);
void CkSshTunnelW_putConnectTimeoutMs(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getDebugLogFilePath(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putDebugLogFilePath(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_debugLogFilePath(HCkSshTunnelW cHandle);
void CkSshTunnelW_getDestHostname(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putDestHostname(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_destHostname(HCkSshTunnelW cHandle);
int CkSshTunnelW_getDestPort(HCkSshTunnelW cHandle);
void CkSshTunnelW_putDestPort(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getHttpProxyAuthMethod(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putHttpProxyAuthMethod(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_httpProxyAuthMethod(HCkSshTunnelW cHandle);
void CkSshTunnelW_getHttpProxyDomain(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putHttpProxyDomain(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_httpProxyDomain(HCkSshTunnelW cHandle);
void CkSshTunnelW_getHttpProxyHostname(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putHttpProxyHostname(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_httpProxyHostname(HCkSshTunnelW cHandle);
void CkSshTunnelW_getHttpProxyPassword(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putHttpProxyPassword(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_httpProxyPassword(HCkSshTunnelW cHandle);
int CkSshTunnelW_getHttpProxyPort(HCkSshTunnelW cHandle);
void CkSshTunnelW_putHttpProxyPort(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getHttpProxyUsername(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putHttpProxyUsername(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_httpProxyUsername(HCkSshTunnelW cHandle);
int CkSshTunnelW_getIdleTimeoutMs(HCkSshTunnelW cHandle);
void CkSshTunnelW_putIdleTimeoutMs(HCkSshTunnelW cHandle, int newVal);
BOOL CkSshTunnelW_getIsAccepting(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_getKeepConnectLog(HCkSshTunnelW cHandle);
void CkSshTunnelW_putKeepConnectLog(HCkSshTunnelW cHandle, BOOL newVal);
void CkSshTunnelW_getLastErrorHtml(HCkSshTunnelW cHandle, HCkString retval);
const wchar_t *CkSshTunnelW_lastErrorHtml(HCkSshTunnelW cHandle);
void CkSshTunnelW_getLastErrorText(HCkSshTunnelW cHandle, HCkString retval);
const wchar_t *CkSshTunnelW_lastErrorText(HCkSshTunnelW cHandle);
void CkSshTunnelW_getLastErrorXml(HCkSshTunnelW cHandle, HCkString retval);
const wchar_t *CkSshTunnelW_lastErrorXml(HCkSshTunnelW cHandle);
void CkSshTunnelW_getListenBindIpAddress(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putListenBindIpAddress(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_listenBindIpAddress(HCkSshTunnelW cHandle);
int CkSshTunnelW_getListenPort(HCkSshTunnelW cHandle);
int CkSshTunnelW_getMaxPacketSize(HCkSshTunnelW cHandle);
void CkSshTunnelW_putMaxPacketSize(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getOutboundBindIpAddress(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putOutboundBindIpAddress(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_outboundBindIpAddress(HCkSshTunnelW cHandle);
int CkSshTunnelW_getOutboundBindPort(HCkSshTunnelW cHandle);
void CkSshTunnelW_putOutboundBindPort(HCkSshTunnelW cHandle, int newVal);
int CkSshTunnelW_getSoRcvBuf(HCkSshTunnelW cHandle);
void CkSshTunnelW_putSoRcvBuf(HCkSshTunnelW cHandle, int newVal);
int CkSshTunnelW_getSoSndBuf(HCkSshTunnelW cHandle);
void CkSshTunnelW_putSoSndBuf(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getSocksHostname(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSocksHostname(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_socksHostname(HCkSshTunnelW cHandle);
void CkSshTunnelW_getSocksPassword(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSocksPassword(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_socksPassword(HCkSshTunnelW cHandle);
int CkSshTunnelW_getSocksPort(HCkSshTunnelW cHandle);
void CkSshTunnelW_putSocksPort(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getSocksUsername(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSocksUsername(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_socksUsername(HCkSshTunnelW cHandle);
int CkSshTunnelW_getSocksVersion(HCkSshTunnelW cHandle);
void CkSshTunnelW_putSocksVersion(HCkSshTunnelW cHandle, int newVal);
void CkSshTunnelW_getSshHostname(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSshHostname(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_sshHostname(HCkSshTunnelW cHandle);
void CkSshTunnelW_getSshLogin(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSshLogin(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_sshLogin(HCkSshTunnelW cHandle);
void CkSshTunnelW_getSshPassword(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putSshPassword(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_sshPassword(HCkSshTunnelW cHandle);
int CkSshTunnelW_getSshPort(HCkSshTunnelW cHandle);
void CkSshTunnelW_putSshPort(HCkSshTunnelW cHandle, int newVal);
BOOL CkSshTunnelW_getTcpNoDelay(HCkSshTunnelW cHandle);
void CkSshTunnelW_putTcpNoDelay(HCkSshTunnelW cHandle, BOOL newVal);
void CkSshTunnelW_getTunnelErrors(HCkSshTunnelW cHandle, HCkString retval);
const wchar_t *CkSshTunnelW_tunnelErrors(HCkSshTunnelW cHandle);
void CkSshTunnelW_getTunnelThreadSessionLogPath(HCkSshTunnelW cHandle, HCkString retval);
void CkSshTunnelW_putTunnelThreadSessionLogPath(HCkSshTunnelW cHandle, const wchar_t *newVal);
const wchar_t *CkSshTunnelW_tunnelThreadSessionLogPath(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_getVerboseLogging(HCkSshTunnelW cHandle);
void CkSshTunnelW_putVerboseLogging(HCkSshTunnelW cHandle, BOOL newVal);
void CkSshTunnelW_getVersion(HCkSshTunnelW cHandle, HCkString retval);
const wchar_t *CkSshTunnelW_version(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_BeginAccepting(HCkSshTunnelW cHandle, int listenPort);
void CkSshTunnelW_ClearTunnelErrors(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_GetTunnelsXml(HCkSshTunnelW cHandle, HCkString outStr);
const wchar_t *CkSshTunnelW_getTunnelsXml(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_SaveLastError(HCkSshTunnelW cHandle, const wchar_t *path);
BOOL CkSshTunnelW_SetSshAuthenticationKey(HCkSshTunnelW cHandle, HCkSshKeyW key);
BOOL CkSshTunnelW_StopAccepting(HCkSshTunnelW cHandle);
BOOL CkSshTunnelW_StopAllTunnels(HCkSshTunnelW cHandle, int maxWaitMs);
BOOL CkSshTunnelW_UnlockComponent(HCkSshTunnelW cHandle, const wchar_t *unlockCode);
#endif
